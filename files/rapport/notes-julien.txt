Sujet:
Réaliser une application permettant aux enfants de primaire (CE1 et plus) de réviser les tables de multiplication.
L'application doit proposer un mode apprentissage pour réviser une table spécifique et un mode évaluation pour s'évaluer sur l'ensemble de celles-ci.

=============Logique de l'appli==============================

I ) Réalisation:

L'application réalisée comprend les affichages suivants:
- Une introduction scénarisée qui n'apparait qu'une seule fois, à la première utilisation.
- Un menu de navigation qui apparait sur toutes les pages.
- Un écran d'accueil
- Une page permettant de sélectionner une table sur laquelle s'entraîner.
- Des pages de questions, contenant systématiquement une question et trois propositions de réponse.
- Un écran de résultat pour le dernier test effectué.
- Un écran contenant tous les résultats, triés par table et opération.
- Une conclusion scénarisée qui n'apparait qu'une fois quand l'utilisateur complète avec succés l'évaluation finale.

Par ailleurs, on utilise un fichier JSON stocké en local et LocalStorage pour sauvegarder toutes nos données. Le fichier JSON est uniquement utilisé au premier lancement de l'application pour initialiser le contenu des tables (celles-ci sont ensuite sauvegardées et récupérées dans LocalStorage).

2 ) Progression de l'utilisateur:

Au premier lancement, une introduction textuelle pensée pour déguiser les futures révisions en quête héroïque est affichée pour familiariser l'utilisateur avec l'application.
Le but final de l'utilisateur est de maîtriser toutes les tables de multiplication. L'utilisateur doit alors augmenter sa maîtrise des tables en affectuant des entraînements et des évaluations de 10 questions. On part du principe qu'une table est maîtrisée quand chacune de ses opérations remplie les conditions suivantes:
- Le nombre de réponses correctes est au moins deux fois plus grand que le nombre d'erreurs.
- Le temps de réponse moyen est inférieur à 7 secondes.
Une fois que toutes les tables sont maîtrisées, l'utilisateur peut passer une évaluation finale de 20 questions. En admettant qu'il arrive à faire un sans-faute à celle-ci, un message de conclusion est affiché pour lui faire savoir qu'il a accompli sa quête. En cas d'erreurs, il doit recommencer à réviser.

3 ) Génération et déroulement d'un test:

Un test est généralement une série de 10 questions. Un test peut être un 'entraînement' ou une 'évaluation'.
Un entraînement ne récupère des opérations que dans une table (choisie par l'utilisateur), tandis qu'une évaluation récupère des opérations dans toutes les tables.
On propose en priorité des opérations problématiques pour l'utilisateur.
On considère qu'une opération est problématique quand:
- L'utilisateur a plus d'erreurs que de bonnes réponses sur celle-ci.
	-> Pour chaque erreur de plus, on ajoute un doublon de l'opération dans la liste utilisée pour générer le test.
- L'utilisateur a un temps moyen de réponse supérieur à 7 secondes (choix arbitraire). 
	-> On ajoute un doublon si c'est le cas.
On pioche ensuite 10 opérations au hasard dans une liste d'opérations pertinentes pour les ajouter au test. A chaque fois qu'on en ajoute une, on l'enlève (avec ses doublons) de la liste pour être certain qu'elle n'apparaisse qu'une fois dans le test.
Pour chaque opération choisie, on génère deux fausses réponses. Une fausse réponse est un entier aléatoire sélectionné dans l'intervalle [p-x;p+x], avec p le produit de l'opération et x le nom de table.
On stocke ensuite les réponses proposées (la bonne et les deux mauvaises) dans une liste, qu'on mélange de façon aléatoire pour éviter de les proposer dans le même ordre systématiquement.

Une fois les questions prêtes, le test commence. L'utilisateur sélectionne une réponse parmi les trois proposées pour chaque question puis passe à la suivante. Une fois qu'il a répondu à chacune des questions, un écran affichant ses résultats apparaits. Sur cet écran il peut voir ses bonnes et mauvaises réponses (avec correction). Les résultats sont alors sauvegardés dans LocaleStorage.

=============================================================

==============Mon retour sur VueJS===========================
La mise à jour automatique des données de VueJS facilite grandement la réalisation d'applications et j'aurais aimé qu'on ait plus de temps pour apprendre à maîtriser ce langage. (à reformuler)